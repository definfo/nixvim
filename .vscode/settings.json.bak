// Fill in $PWD and $SYSTEM before usage
{
  "nix.serverPath": "nixd",
  "nix.enableLanguageServer": true,
  "nix.serverSettings": {
    "nixd": {
      "nixpkgs": {
        // For flake.
        "expr": "import (builtins.getFlake \"$PWD\").inputs.nixpkgs { }   "
        // This expression will be interpreted as "nixpkgs" toplevel
        // Nixd provides package, lib completion/information from it.
        ///
        // Resource Usage: Entries are lazily evaluated, entire nixpkgs takes 200~300MB for just "names".
        ///                Package documentation, versions, are evaluated by-need.
        // "expr": "import <nixpkgs> { }"
      },
      "formatting": {
        // Which command you would like to do formatting
        "command": ["nixfmt"]
      },
      // Tell the language server your desired option set, for completion
      // This is lazily evaluated.
      "options": {
        // Map of eval information
        // If this is omitted, default search path (<nixpkgs>) will be used.
        "nixvim": {
          // This name "nixos" could be arbitrary.
          // The expression to eval, interpret it as option declarations.
          "expr": "(builtins.getFlake \"$PWD\").inputs.nixvim.nixvimConfigurations.$SYSTEM.default.options"
        }
      },
      // Control the diagnostic system
      "diagnostic": {
        "suppress": ["sema-extra-with"]
      }
    }
  }
}
